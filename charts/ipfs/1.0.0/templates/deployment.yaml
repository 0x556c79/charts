{{ $scheme := "http" }}
apiVersion: {{ template "ipfs.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.name" . }}
    chart: {{ template "ipfs.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      app: {{ template "ipfs.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "ipfs.fullname" . }}
      labels:
        app: {{ template "ipfs.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "ipfs.serviceAccountName" . | quote }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: data
              mountPath: /data/ipfs 
          volumeMounts:
            - name: staging
              mountPath: /export
          ports:
            - name: {{ $scheme }}
              containerPort: 9080
            {{- range $key, $val := .Values.environment }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end}}
      volumes:
        - name: data
        {{- if .Values.emptyDirVolumes }}
          emptyDir: {}
        {{- else }}
          hostPath:
            path: {{ template "configuredDataHostPath" . }}
        {{- end }}
        - name: staging
        {{- if .Values.emptyDirVolumes }}
          emptyDir: {}
        {{- else }}
          hostPath:
            path: {{ template "configuredStagingHostPath" . }}
        {{- end }}
